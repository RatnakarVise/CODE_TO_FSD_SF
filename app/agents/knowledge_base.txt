#Document Information
type: table
description: Summary table of title, project, version, author.
fields: [Document Title, Project Name, Client Name, Prepared By (Author, Department), Document Version & Date]
prompt: List all title, project, client, version, and author (Keep its Value "PWC AI Asset" always) in a table.

#Introduction
type: text
description: Brief statement of document purpose, scope, and intended audience.
prompt: Carefully analyze the payload(pgm_name, type, explanation) and state the purpose, scope, and audience for this document as functional specification.

#Business Requirement Overview
type: text
description: Concise statement of business requirements, business process pain points, and objectives of the proposed solution.
prompt: Summarize the business requirements and objectives as provided in the payload.

#Business Process Flow
type: diagram
description: High-level functional process flow of business requirement before and after solution, represented as sequential steps or branching decisions.
prompt: Carefully analyze the payload and present the process as an arrow-connected flow (Start -> Step1 -> Step2 -> … -> End). Show Yes/No branches if applicable. Only use actual provided details.

#Functional Scope
type: text
description: Definition of what is included and excluded in the functional scope of the solution.
prompt: From the payload, list: 1. In-Scope items 2. Out-of-Scope items. Present in numbered format. This should be in detail and should contain all the logic.

#Functional Solution Approach
type: text
description: High-level description of how the business requirement will be addressed functionally.
prompt: Carefully analyze the payload and and for every functional scope provide the functional solution approach in detail as: 1. … 2. … 3. …

#Functional Requirements
type: text
description: Capture all detailed functional requirements and associated business rules.
prompt: Present all functional requirements and business with the provided fields. Use values from payload('pgm_name', 'type', 'explanation') or [To Be Filled] if missing.

#Interfaces & Integration
type: table
description: List of all functional interfaces (inbound, outbound, real-time, batch) and their purpose.
fields: [Interface ID, Source System, Target System, Data/Message Type, Frequency/Mode, Description]
prompt: Present the interface details strictly in table format based on payload. Do not assume or invent.

#Smartform Layout
type: table
description: Table of all Layout details using sf_strcuture and sf_purpose.
fields: [Page, Window, Element, Type, Description].
prompt: Present the results strictly as a table with the columns: Page, Window, Element, Type, Description. and describe the layout of the smart using the Page window and field details

#Smartform Details
type: text
description: Describe the layout and the usage of all the fields using sf_strcuture and sf_purpose.
prompt: Describe in detail about each and every section of form starting from Form Name -> Page -> Window -> elements -> code etc. Describe in detail everything you get in as smartform input

#Output
type: text
description: 
  List of reports, extracts, and outputs required functionally. 
  Include any output generated by programs, reports, or processes.
prompt: 
  Carefully analyze the payload (Output Format) and list all reports/outputs required. 
  1. Identify all program outputs, report results, and generated extracts. 
  2. Include the format (Excel, PDF, CSV, etc.) and layout if specified. 
  3. Specify the destination (SAP AL11 path, email, spool, etc.). 
  4. Provide the functional purpose or description of each output.

#UI Requirement
type: test
description: 
  List of functional screen fields, selection-screen parameters, user interactions, defaults, and validations.
prompt: 
  Analyze the payload (Report Filters/Selection Screen) to extract all UI elements. 
  1. Identify all selection screen parameters and screen fields, usually starting with 'S_***' or 'P_***'. 
  2. Determine the field type (Input, Checkbox, Radio, Dropdown, Date, etc.). 
  3. Capture default values if any. 
  4. Identify mandatory fields (Y/N). 
  5. Include business purpose or validation logic if mentioned (e.g., range check, format check, dependencies between fields). 
  6. If the field affects visibility or interactivity of other fields (e.g., radio button controlling P_obj/P_file), mention it under Business Purpose/Validation.

#Authorization & Security
type: table
description: Functional authorization requirements, roles, and access restrictions.
fields: [Role/Profile, Authorization Object, Access Level, Description]
prompt: Present the functional authorization requirements in table format using payload. If missing, mark as [To Be Filled].

#Error Handling & Notifications
type: text
description: Explanation of error handling, messages, and user notifications required in functional solution.
prompt: From the payload(requirements, business_rules), list all error handling and notification requirements in numbered format.

#Assumptions & Dependencies
type: text
description: List of assumptions and dependencies impacting functional design.
prompt: Extract assumptions and dependencies from payload and present in numbered format.

#Test Scenario
type: table
description: Functional test plan coverage/scenarios, input data, expected outputs, status.
fields: [Test Case ID, Objective, Input Data, Expected Output, Actual Result/Status, Sign-off/Comments]
prompt: Analyze the payload(selectionscreen, declarations and explanation) and generate functional test cases in table format.

#Sign-Off
type: table
description: Table of prepared by, approved by, and client sign-off (with signature and date).
fields: [Role, Name, Signature, Date]
prompt: Provide a sign-off table for Prepared By, Approved By, and Client Sign-Off.
